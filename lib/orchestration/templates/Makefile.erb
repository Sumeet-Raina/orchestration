
# Do not edit this file below this point. Any changes will be overwritten.
#
# Example `test` command which will start and wait for all services before
# running tests:
#
# test: start wait
# 	bundle exec rspec
# 	yarn test app/javascript
# 	bundle exec rubocop
# 	yarn run eslint app/javascript
#
.PHONY: start stop migrate docker build push start <%= wait_commands %>

### Container management commands ###

COMPOSE:=HOST_UID=$(shell id -u) docker-compose

start:
	@echo "Starting containers..."
	@${COMPOSE} up -d
	@make wait

stop:
	@echo "Stopping containers..."
	@${COMPOSE} down

### Database utility commands ###

migrate: wait-database
	@echo "Running migrations..."
	@${COMPOSE} run application bundle exec rake db:migrate
	@echo "Migrations complete."

### Service healthcheck commands ###

wait: <%= wait_commands %>
	@echo "All Containers ready."

wait-application:
	@bin/rake orchestration:application:wait

wait-database:
	@bin/rake orchestration:db:wait

wait-mongo:
	@bin/rake orchestration:mongo:wait

wait-rabbitmq:
	@bin/rake orchestration:rabbitmq:wait

### Docker build commands ###

docker: build push

build:
	@echo "Preparing build."
	@mkdir -p ./docker/.build
	@git show master:./Gemfile > ./docker/Gemfile
	@git show master:./Gemfile.lock > ./docker/Gemfile.lock
	@echo "Building..."
	@git archive --format tar.gz -o docker/.build/context.tar.gz master
	@docker build \
	             --build-arg BUNDLE_GITHUB__COM \
	             --build-arg BUNDLE_BITBUCKET__ORG \
		     -t $(shell bin/rake orchestration:docker:username)/<%= app_id %> \
		     -t $(shell bin/rake orchestration:docker:username)/<%= app_id %>:$(shell git rev-parse --short --verify master) \
		     ./docker/
	@echo "Build complete."

push: VERSION := $(shell git rev-parse --short --verify master)
push:
	docker push $(shell bin/rake orchestration:docker:username)/<%= app_id %>:${VERSION}
